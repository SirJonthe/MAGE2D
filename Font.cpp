#include "Font.h"
#include <iostream>
#include <climits>

#define first_char '!'
#define last_char '~'
#define font_width 1034
#define font_height 13
static const unsigned char font_bits[] = {
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x8f, 0x1f,
   0xf1, 0x88, 0x7f, 0xfd, 0xf8, 0xc3, 0x3f, 0xfe, 0xc1, 0x83, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7c, 0xc0, 0x87, 0x0f, 0xf0, 0x80,
   0xe3, 0x18, 0xc0, 0x01, 0x07, 0x70, 0xc0, 0x03, 0x3e, 0xfe, 0xf1, 0xff,
   0xff, 0xff, 0xff, 0x0f, 0x78, 0xc0, 0x03, 0x0e, 0xf0, 0x80, 0x03, 0x1c,
   0xc0, 0x00, 0x0e, 0x38, 0x8e, 0x03, 0x0e, 0x60, 0x1c, 0xe3, 0x9f, 0xcf,
   0x38, 0x0e, 0x38, 0xc0, 0x03, 0x0e, 0xf0, 0x80, 0x03, 0x18, 0xc7, 0x38,
   0xc6, 0x31, 0x8e, 0x71, 0x0c, 0xe0, 0x81, 0xc7, 0x3f, 0xf0, 0xef, 0xff,
   0xff, 0xf1, 0x03, 0x0e, 0xf0, 0x80, 0x03, 0x1c, 0xc0, 0x00, 0x0e, 0x38,
   0x8e, 0x03, 0x0e, 0x60, 0x1c, 0xe3, 0x9f, 0xcf, 0x38, 0x0e, 0x38, 0xc0,
   0x03, 0x0e, 0xf0, 0x80, 0x03, 0x18, 0xc7, 0x38, 0xc6, 0x31, 0x8e, 0x71,
   0x0c, 0xe0, 0x83, 0x5f, 0x3f, 0xf8, 0x00, 0x02, 0x8f, 0x1f, 0xf1, 0x88,
   0x07, 0xf8, 0xfa, 0x81, 0x3f, 0xfe, 0xc0, 0x03, 0xff, 0xfe, 0xff, 0xff,
   0xff, 0xff, 0xff, 0x7f, 0x3c, 0x80, 0x83, 0x0f, 0x60, 0x00, 0xe3, 0x18,
   0xc0, 0x00, 0x07, 0x30, 0x80, 0x01, 0x3c, 0xfe, 0xf1, 0xff, 0xff, 0xff,
   0xff, 0x07, 0x30, 0x80, 0x01, 0x0c, 0x60, 0x00, 0x03, 0x18, 0xc0, 0x00,
   0x06, 0x30, 0x8e, 0x03, 0x0e, 0x60, 0x1c, 0xe3, 0x1f, 0xc7, 0x38, 0x06,
   0x30, 0x80, 0x01, 0x0c, 0x60, 0x00, 0x03, 0x18, 0xc7, 0x38, 0xc6, 0x31,
   0x8e, 0x71, 0x0c, 0xe0, 0x81, 0xc7, 0x3f, 0xf0, 0xc7, 0xff, 0xff, 0xf1,
   0x01, 0x0c, 0x60, 0x00, 0x03, 0x18, 0xc0, 0x00, 0x06, 0x30, 0x8e, 0x03,
   0x0e, 0x60, 0x1c, 0xe3, 0x1f, 0xc7, 0x38, 0x06, 0x30, 0x80, 0x01, 0x0c,
   0x60, 0x00, 0x03, 0x18, 0xc7, 0x38, 0xc6, 0x31, 0x8e, 0x71, 0x0c, 0xe0,
   0x81, 0x0f, 0x3f, 0xf0, 0xfe, 0x02, 0x8f, 0x3f, 0x73, 0x00, 0x03, 0xf8,
   0xf8, 0x89, 0x7f, 0xff, 0xc0, 0x03, 0x3f, 0xf8, 0xe3, 0xff, 0xff, 0xff,
   0xff, 0x3f, 0x3e, 0x80, 0x83, 0x0f, 0x60, 0x00, 0xe3, 0x18, 0xc0, 0x00,
   0x07, 0x30, 0x80, 0x01, 0x3c, 0xfe, 0xf1, 0x3f, 0x3e, 0xe0, 0xe3, 0x07,
   0x30, 0x9f, 0x01, 0x0c, 0x60, 0x00, 0x03, 0x18, 0xc0, 0x00, 0x06, 0x30,
   0x8e, 0x03, 0x0e, 0x60, 0x1c, 0xe3, 0x1f, 0xc2, 0x38, 0x06, 0x30, 0x80,
   0x01, 0x0c, 0x60, 0x00, 0x03, 0x18, 0xc7, 0x38, 0xc6, 0x31, 0x8e, 0x71,
   0x0c, 0xe0, 0x81, 0x8f, 0x3f, 0xf0, 0x83, 0xff, 0xff, 0xf7, 0x01, 0x0c,
   0x60, 0x00, 0x03, 0x18, 0xc0, 0x00, 0x06, 0x30, 0x8e, 0x03, 0x0e, 0x60,
   0x1c, 0xe3, 0x1f, 0xc2, 0x38, 0x06, 0x30, 0x80, 0x01, 0x0c, 0x60, 0x00,
   0x03, 0x18, 0xc7, 0x38, 0xc6, 0x31, 0x8e, 0x71, 0x0c, 0xe0, 0x81, 0x0f,
   0x3f, 0xf0, 0xfe, 0x02, 0x8f, 0xff, 0x7f, 0x00, 0xa3, 0xfe, 0xff, 0xc3,
   0xff, 0xff, 0xf8, 0x1f, 0x7f, 0xfc, 0xe3, 0xff, 0xff, 0xff, 0xff, 0x3f,
   0x3e, 0x86, 0x8f, 0xff, 0x63, 0x1c, 0xe3, 0x18, 0xff, 0xf8, 0xff, 0x31,
   0x8e, 0x71, 0xfc, 0xff, 0xff, 0x1f, 0x3f, 0xe0, 0xc7, 0xc7, 0x31, 0x83,
   0x71, 0x8c, 0x63, 0x1c, 0xe3, 0x18, 0xff, 0xf8, 0xc7, 0x31, 0x8e, 0x8f,
   0xff, 0x63, 0x1c, 0xe3, 0x1f, 0xc0, 0x30, 0xc6, 0x31, 0x8e, 0x71, 0x8c,
   0x63, 0xfc, 0x1f, 0x1f, 0xc7, 0x38, 0xc6, 0x31, 0x84, 0x71, 0xfc, 0xe3,
   0xf1, 0x8f, 0xff, 0xf1, 0x93, 0xff, 0xff, 0xff, 0x71, 0x8c, 0x63, 0x1c,
   0xe3, 0x18, 0xff, 0xf8, 0xc7, 0x31, 0x8e, 0x8f, 0xff, 0x63, 0x1c, 0xe3,
   0x1f, 0xc0, 0x30, 0xc6, 0x31, 0x8e, 0x71, 0x8c, 0x63, 0xfc, 0x1f, 0x1f,
   0xc7, 0x38, 0xc6, 0x31, 0x84, 0x71, 0xfc, 0xe3, 0xf1, 0xaf, 0xff, 0xf1,
   0xfe, 0x02, 0x8f, 0xff, 0x7f, 0x00, 0x03, 0x1c, 0xc0, 0x63, 0xfe, 0xff,
   0xf8, 0x1f, 0x7f, 0xfc, 0x80, 0xff, 0x3f, 0xe0, 0xff, 0x1f, 0x3f, 0x82,
   0x8f, 0x1f, 0xe0, 0x0f, 0x03, 0x18, 0xe0, 0x00, 0xff, 0x31, 0x80, 0x01,
   0xfc, 0xff, 0xff, 0x8f, 0x3f, 0xe0, 0x8f, 0x7f, 0x30, 0x81, 0x71, 0x0c,
   0x60, 0xfc, 0xe3, 0x18, 0xf8, 0xc0, 0xc7, 0x3f, 0x80, 0x8f, 0xff, 0x63,
   0x00, 0xe3, 0x1f, 0xc0, 0x20, 0xc6, 0x31, 0x8e, 0x71, 0x8c, 0x63, 0x80,
   0x1f, 0x1f, 0xc7, 0x38, 0xc6, 0x31, 0x80, 0x01, 0x3c, 0xe0, 0xf1, 0x1f,
   0xff, 0xf1, 0xbb, 0xff, 0xff, 0xff, 0x71, 0x0c, 0x60, 0xfc, 0xe3, 0x18,
   0xf8, 0xc0, 0xc7, 0x3f, 0x80, 0x8f, 0xff, 0x63, 0x00, 0xe3, 0x1f, 0xc0,
   0x20, 0xc6, 0x31, 0x8e, 0x71, 0x8c, 0x63, 0x80, 0x1f, 0x1f, 0xc7, 0x38,
   0xc6, 0x31, 0x80, 0x01, 0x3c, 0xe0, 0xf3, 0xff, 0xff, 0xf9, 0xfe, 0x02,
   0x8f, 0xff, 0xff, 0x88, 0x03, 0x18, 0xc0, 0x41, 0xfe, 0xff, 0xf8, 0x1f,
   0xbf, 0xfb, 0x80, 0xff, 0x3f, 0xe0, 0xff, 0x1f, 0x3f, 0x80, 0x8f, 0x0f,
   0xe0, 0x87, 0x03, 0x18, 0xc0, 0x00, 0xfe, 0x78, 0xc0, 0x01, 0xfc, 0xff,
   0xff, 0xc7, 0xff, 0xff, 0x1f, 0x3f, 0x38, 0x99, 0x01, 0x0c, 0x70, 0xfc,
   0xe3, 0x18, 0xf8, 0xc0, 0x47, 0x30, 0x80, 0x8f, 0xff, 0x63, 0x80, 0xe3,
   0x1f, 0xc5, 0x00, 0xc6, 0x31, 0x80, 0x71, 0x0c, 0x60, 0x00, 0x1f, 0x1f,
   0xc7, 0x38, 0x46, 0x71, 0xc0, 0x01, 0x1c, 0xf0, 0xf1, 0x1f, 0xff, 0xf1,
   0xff, 0xff, 0xff, 0xff, 0x01, 0x0c, 0x70, 0xfc, 0xe3, 0x18, 0xf8, 0xc0,
   0x47, 0x30, 0x80, 0x8f, 0xff, 0x63, 0x80, 0xe3, 0x1f, 0xc5, 0x00, 0xc6,
   0x31, 0x80, 0x71, 0x0c, 0x60, 0x00, 0x1f, 0x1f, 0xc7, 0x38, 0x46, 0x71,
   0xc0, 0x01, 0x1c, 0xf0, 0xf9, 0xff, 0xff, 0xf3, 0xfe, 0x02, 0x8f, 0xff,
   0x7f, 0x00, 0x07, 0x18, 0xc0, 0x18, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff,
   0x80, 0xff, 0x3f, 0xe0, 0xff, 0x8f, 0x3f, 0x88, 0x8f, 0x0f, 0xf0, 0x0f,
   0x07, 0x18, 0xc0, 0x00, 0xfe, 0x38, 0x80, 0x03, 0xfc, 0xff, 0xff, 0x8f,
   0x3f, 0xe0, 0x8f, 0x3f, 0x3e, 0x81, 0x01, 0x0c, 0x60, 0xfc, 0xe3, 0x18,
   0xf8, 0xc0, 0x47, 0x30, 0x80, 0x8f, 0x8f, 0x63, 0x00, 0xe3, 0x1f, 0xc7,
   0x08, 0xc6, 0x31, 0x80, 0x11, 0x0c, 0xf0, 0x00, 0x1f, 0x1f, 0xc7, 0x38,
   0x06, 0x30, 0x80, 0x03, 0x0e, 0xf8, 0xf1, 0x3f, 0xfe, 0xf1, 0xff, 0xff,
   0xff, 0xff, 0x01, 0x0c, 0x60, 0xfc, 0xe3, 0x18, 0xf8, 0xc0, 0x47, 0x30,
   0x80, 0x8f, 0x8f, 0x63, 0x00, 0xe3, 0x1f, 0xc7, 0x08, 0xc6, 0x31, 0x80,
   0x11, 0x0c, 0xf0, 0x00, 0x1f, 0x1f, 0xc7, 0x38, 0x06, 0x30, 0x80, 0x03,
   0x0e, 0xf8, 0xf3, 0xff, 0xff, 0xf9, 0xfe, 0x02, 0xff, 0xff, 0x7f, 0x00,
   0xaf, 0xf8, 0xff, 0x38, 0xfe, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xe3, 0xff,
   0xff, 0xff, 0xff, 0x8f, 0x3f, 0x8c, 0x8f, 0x8f, 0x7f, 0x1c, 0xff, 0xf8,
   0xc7, 0x38, 0xfe, 0x38, 0x8e, 0x7f, 0xfc, 0xff, 0xff, 0x1f, 0x3f, 0xe0,
   0xc7, 0xff, 0x3f, 0x83, 0x01, 0x8c, 0x63, 0x1c, 0xe3, 0x18, 0xff, 0xf8,
   0xc7, 0x31, 0x8e, 0x8f, 0x8f, 0x63, 0x1c, 0xe3, 0x1f, 0xc7, 0x18, 0xc6,
   0x31, 0xc0, 0x11, 0x0c, 0xe0, 0x1f, 0x1f, 0x1f, 0xc7, 0x11, 0x07, 0x30,
   0x84, 0x8f, 0x8f, 0xff, 0xf1, 0x3f, 0xfe, 0xf1, 0xff, 0xff, 0xff, 0xff,
   0x01, 0x8c, 0x63, 0x1c, 0xe3, 0x18, 0xff, 0xf8, 0xc7, 0x31, 0x8e, 0x8f,
   0x8f, 0x63, 0x1c, 0xe3, 0x1f, 0xc7, 0x18, 0xc6, 0x31, 0xc0, 0x11, 0x0c,
   0xe0, 0x1f, 0x1f, 0x1f, 0xc7, 0x11, 0x07, 0x30, 0x84, 0x8f, 0x8f, 0xff,
   0xf1, 0xff, 0xff, 0xf1, 0xfe, 0x02, 0x8f, 0xff, 0x7f, 0x00, 0x03, 0xf8,
   0xf8, 0x00, 0xfe, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xe3, 0x8f, 0xff, 0xff,
   0xe3, 0xc7, 0x3f, 0x80, 0x03, 0x0e, 0x60, 0x00, 0xff, 0x18, 0xc0, 0x00,
   0x7e, 0x3c, 0x80, 0x03, 0x3c, 0xfe, 0xf1, 0x3f, 0x3e, 0xe0, 0xe3, 0x3f,
   0x3e, 0xff, 0x71, 0x0c, 0x60, 0x00, 0x03, 0x18, 0xc0, 0xf8, 0x07, 0x30,
   0x8e, 0x03, 0x0e, 0x60, 0x1c, 0x03, 0x18, 0xc7, 0x38, 0x06, 0x30, 0xfe,
   0x01, 0x8c, 0x63, 0x00, 0x1f, 0x1f, 0xc0, 0x83, 0x87, 0x30, 0x8e, 0x8f,
   0x0f, 0xe0, 0x81, 0x7f, 0x3c, 0xf0, 0xff, 0x07, 0xf0, 0xff, 0x71, 0x0c,
   0x60, 0x00, 0x03, 0x18, 0xc0, 0xf8, 0x07, 0x30, 0x8e, 0x03, 0x0e, 0x60,
   0x1c, 0x03, 0x18, 0xc7, 0x38, 0x06, 0x30, 0xfe, 0x01, 0x8c, 0x63, 0x00,
   0x1f, 0x1f, 0xc0, 0x83, 0x87, 0x30, 0x8e, 0x8f, 0x0f, 0xe0, 0x81, 0xff,
   0x3f, 0xf0, 0xfe, 0x02, 0x8f, 0xff, 0xff, 0x88, 0x03, 0xfc, 0xfa, 0x80,
   0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xe3, 0xc7,
   0x3f, 0x80, 0x03, 0x0e, 0x60, 0x00, 0xff, 0x18, 0xc0, 0x00, 0x7e, 0x3c,
   0x80, 0x03, 0x3c, 0xfe, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x3e, 0x80,
   0x71, 0x0c, 0x60, 0x00, 0x03, 0x18, 0xc0, 0xf8, 0x07, 0x30, 0x8e, 0x03,
   0x0e, 0x60, 0x1c, 0x03, 0x18, 0xc7, 0x38, 0x06, 0x30, 0xfe, 0x01, 0x8c,
   0x63, 0x00, 0x1f, 0x1f, 0xc0, 0xc7, 0xc7, 0x31, 0x8e, 0x8f, 0x0f, 0xe0,
   0x81, 0x7f, 0x3c, 0xf0, 0xff, 0x07, 0xf0, 0xff, 0x71, 0x0c, 0x60, 0x00,
   0x03, 0x18, 0xc0, 0xf8, 0x07, 0x30, 0x8e, 0x03, 0x0e, 0x60, 0x1c, 0x03,
   0x18, 0xc7, 0x38, 0x06, 0x30, 0xfe, 0x01, 0x8c, 0x63, 0x00, 0x1f, 0x1f,
   0xc0, 0xc7, 0xc7, 0x31, 0x8e, 0x8f, 0x0f, 0xe0, 0x81, 0xff, 0x3f, 0xf0,
   0xfe, 0x02, 0x8f, 0xff, 0xff, 0x88, 0xd7, 0xff, 0xf8, 0xc1, 0xff, 0xff,
   0xc1, 0x83, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xe3, 0xc7, 0x7f, 0xc0,
   0x03, 0x0e, 0xe0, 0x80, 0xff, 0x18, 0xe0, 0x01, 0x7f, 0x7c, 0xc0, 0x03,
   0x3e, 0xfe, 0xf3, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x7e, 0xc0, 0x71, 0x0c,
   0xf0, 0x80, 0x03, 0x1c, 0xc0, 0xf8, 0x0f, 0x38, 0x8e, 0x03, 0x1e, 0x70,
   0x1c, 0x03, 0x18, 0xc7, 0x38, 0x0e, 0x38, 0xfe, 0x03, 0x8c, 0xe3, 0x80,
   0x1f, 0x3f, 0xe0, 0xef, 0xef, 0x3b, 0x8e, 0x8f, 0x0f, 0xe0, 0x81, 0x7f,
   0x3c, 0xf0, 0xff, 0x07, 0xf0, 0xff, 0x71, 0x0c, 0xf0, 0x80, 0x03, 0x1c,
   0xc0, 0xf8, 0x0f, 0x38, 0x8e, 0x03, 0x1e, 0x70, 0x1c, 0x03, 0x18, 0xc7,
   0x38, 0x0e, 0x38, 0xfe, 0x03, 0x8c, 0xe3, 0x80, 0x1f, 0x3f, 0xe0, 0xef,
   0xef, 0x3b, 0x8e, 0x8f, 0x0f, 0xe0, 0x83, 0xff, 0x3f, 0xf8, 0x00, 0x02,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03
};

void DrawFont(const mtlChars &string, int x, int y, Uint8 r, Uint8 g, Uint8 b)
{
	SDL_Surface *characterImage = SDL_CreateRGBSurface(SDL_HWSURFACE, GetFontWidth(), GetFontHeight(), 32, SDL_GetVideoSurface()->format->Rmask, SDL_GetVideoSurface()->format->Gmask, SDL_GetVideoSurface()->format->Bmask, SDL_GetVideoSurface()->format->Amask);

	if (characterImage == NULL) {
		std::cout << "" << std::endl;
		return;
	}

	Uint32 color = SDL_MapRGB(characterImage->format, r, g, b);

	int startX = x;

	for (int i = 0; i < string.GetSize(); ++i) {
		char ch = string.GetChars()[i];
		switch (ch) {
		case ' ': break;
			x += GetFontWidth();
		case '\t':
			x += GetFontWidth() * 4;
			break;
		case '\r':
		case '\n':
			y +=  GetFontHeight();
			x = startX;
			break;
		default: {
				SDL_FillRect(characterImage, NULL, 0);
				if (SDL_MUSTLOCK(characterImage)) {
					SDL_UnlockSurface(characterImage);
				}

				int fx;
				if (ch < first_char || ch > last_char) {
					fx = font_width - GetFontWidth();
				} else {
					fx = (ch - first_char) * GetFontWidth();
				}

				for (int iy = 0; iy < GetFontHeight(); ++iy) {
					for (int ix = 0; ix < GetFontWidth(); ++ix) {

						int	pixelBytePos = ((iy * font_width) + ix+fx) / 8;
						if (font_width % 8 > 0) {
							pixelBytePos += (iy / 8) + 1;
						}
						char pixelByte = (*(font_bits + pixelBytePos)) >> (ix % 8);
						if ((pixelByte & 0x1) == 0) { // colors are reversed?
							Uint32 *pixel = ((Uint32*)characterImage->pixels) + iy * characterImage->w + ix;
							*pixel = color;
						}
					}
				}

				if (SDL_MUSTLOCK(characterImage)) {
					SDL_UnlockSurface(characterImage);
				}

				// RENDER USING OPENGL HERE (coords = x, y px)
			}
			break;
		}
	}
}

int GetFontWidth( void )
{
	return font_width / (last_char - first_char + 1);
}

int GetFontHeight( void )
{
	return font_height;
}
